@model BeatBay.DTOs.CreateUserDto

@{
    ViewData["Title"] = "Register";
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="card shadow-lg border-0">
            <div class="card-header bg-success text-white text-center">
                <h3><i class="fas fa-user-plus"></i> Join BeatBay</h3>
                <p class="mb-0">Create your account and start listening!</p>
            </div>
            <div class="card-body p-4">
                <form asp-action="Register" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                <input asp-for="UserName" class="form-control" id="floatingUserName" placeholder="Username" />
                                <label for="floatingUserName"><i class="fas fa-user"></i> Username *</label>
                                <span asp-validation-for="UserName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                <input asp-for="Email" type="email" class="form-control" id="floatingEmail" placeholder="Email" />
                                <label for="floatingEmail"><i class="fas fa-envelope"></i> Email *</label>
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                <input asp-for="Password" type="password" class="form-control" id="floatingPassword" placeholder="Password" />
                                <label for="floatingPassword"><i class="fas fa-lock"></i> Password *</label>
                                <span asp-validation-for="Password" class="text-danger"></span>
                                <div class="form-text">Password must be at least 6 characters long</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                <input asp-for="ConfirmPassword" type="password" class="form-control" id="floatingConfirmPassword" placeholder="Confirm Password" />
                                <label for="floatingConfirmPassword"><i class="fas fa-lock"></i> Confirm Password *</label>
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        <input asp-for="Name" class="form-control" id="floatingName" placeholder="Full Name" />
                        <label for="floatingName"><i class="fas fa-id-card"></i> Full Name (Optional)</label>
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="form-floating mb-3">
                        <textarea asp-for="Bio" class="form-control" id="floatingBio" placeholder="Bio" style="height: 100px"></textarea>
                        <label for="floatingBio"><i class="fas fa-info-circle"></i> Bio (Optional)</label>
                        <span asp-validation-for="Bio" class="text-message"></span>
                    </div>

                    <div class="form-floating mb-3">
                        <select asp-for="PlanId" class="form-select" id="floatingPlan">
                            <option value="">Select a Plan (Optional)</option>
                            <option value="1">Free Plan - $0/month</option>
                            <option value="2">Personal Plan - $1/month</option>
                            <option value="3">Family Plan - $3.50/month</option>
                            <option value="4">Business Plan - $35/month</option>
                        </select>
                        <label for="floatingPlan"><i class="fas fa-crown"></i> Subscription Plan</label>
                        <span asp-validation-for="PlanId" class="text-danger"></span>
                    </div>

                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="termsCheck" required>
                        <label class="form-check-label" for="termsCheck">
                            I agree to the <a href="#" class="text-success">Terms of Service</a> and <a href="#" class="text-success">Privacy Policy</a> *
                        </label>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-success btn-lg">
                            <i class="fas fa-user-plus"></i> Create Account
                        </button>
                    </div>
                </form>

                <hr class="my-4">

                <div class="text-center">
                    <p class="mb-2">Already have an account?</p>
                    <a asp-action="Login" class="btn btn-outline-primary">
                        <i class="fas fa-sign-in-alt"></i> Login Here
                    </a>
                </div>

                <div class="text-center mt-3">
                    <p class="text-muted">
                        <i class="fas fa-microphone"></i>
                        Are you an artist? <a asp-action="RegisterArtist" class="text-warning">Register as Artist</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border-radius: 15px;
        margin-top: 30px;
        margin-bottom: 30px;
    }

    .card-header {
        border-radius: 15px 15px 0 0 !important;
        padding: 25px;
    }

    .form-floating > label {
        padding-left: 2.5rem;
    }

    .form-floating > .form-control,
    .form-floating > .form-select {
        padding-left: 2.5rem;
    }

    .form-floating > label i {
        position: absolute;
        left: -1.5rem;
        top: 50%;
        transform: -translate(-50%);
    }

    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
    }

    .btn-lg {
        padding: 12px 24px;
        font-size: 1.1rem;
    }

    .form-text {
        font-size: 0.875rem;
        color: #6c757d;
        margin-top: 5px;
    }

    .text-success {
        color: #28a745 !important;
    }

        .text-success:hover {
            color: #1e7e34 !important;
            text-decoration: none;
        }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            border-color: #007bff;
        }

    .text-warning {
        color: #ffc107 !important;
    }

        .text-warning:hover {
            color: #e0a800 !important;
            text-decoration: none;
        }

    /* Mejoras en la responsividad */
    @@media (max-width: 768px) {
        .card-header

    {
        padding: 20px 15px;
    }

    .card-body {
        padding: 20px 15px;
    }

    .form-floating > label {
        padding-left: 2rem;
    }

    .form-floating > .form-control,
    .form-floating > .form-select {
        padding-left: 2rem;
    }

    .form-floating > label i {
        left: -1rem;
    }

    }

    /* Animaciones suaves */
    .form-control:focus,
    .form-select:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
        transition: all 0.3s ease;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .card {
        transition: transform 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    /* Estilos para los mensajes de validación */
    .text-danger {
        font-size: 0.875rem;
        margin-top: 5px;
    }

    .form-check-input:checked {
        background-color: #28a745;
        border-color: #28a745;
    }

    .form-check-input:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Validación adicional del formulario
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const password = document.getElementById('floatingPassword');
            const confirmPassword = document.getElementById('floatingConfirmPassword');
            const termsCheck = document.getElementById('termsCheck');

            // Validar que las contraseñas coincidan
            function validatePasswords() {
                if (password.value !== confirmPassword.value) {
                    confirmPassword.setCustomValidity('Las contraseñas no coinciden');
                } else {
                    confirmPassword.setCustomValidity('');
                }
            }

            password.addEventListener('input', validatePasswords);
            confirmPassword.addEventListener('input', validatePasswords);

            // Validar términos y condiciones
            form.addEventListener('submit', function(e) {
                if (!termsCheck.checked) {
                    e.preventDefault();
                    alert('Debes aceptar los términos y condiciones para continuar');
                    return false;
                }
            });

            // Efecto visual para campos con error
            const inputs = document.querySelectorAll('.form-control, .form-select');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    const errorSpan = this.parentElement.querySelector('.text-danger');
                    if (errorSpan && errorSpan.textContent.trim() !== '') {
                        this.classList.add('is-invalid');
                    } else {
                        this.classList.remove('is-invalid');
                    }
                });
            });
        });
    </script>
}